name: Deploy to ENV
run-name: "Deploy to ${{ inputs.environment }}"

permissions:
  contents: read


on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to deploy
        default: dev
        options:
          - dev
          - perf
      ref:
        description: "Branch or Commit"
        default: main
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
    
      - name: Build and Push Artifacts
        id: build_and_push
        uses: ./.github/actions/build-push-artifacts
        with:
          ref: ${{ inputs.ref }}
          aws-access-key-id: ${{ secrets.VAEC_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.VAEC_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.VAEC_DEPLOY_ROLE }}

      - name: Set uppercase environment name
        id: env_case
        run: echo "env_upper=$(echo ${{ inputs.environment }} | tr '[:lower:]' '[:upper:]')" >> $GITHUB_OUTPUT

      - name: Renders and deploys task definition for ${{ inputs.environment }}
        uses: ./.github/actions/ecs-task-render-deploy
        with:
          task-definition-path: "./cd/va-enp-api-task-definition.json"
          container-name: "va-enp-api"
          image: ${{ steps.build_and_push.outputs.image-uri }}
          aws-access-key-id: ${{ secrets.VAEC_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.VAEC_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.VAEC_DEPLOY_ROLE }}
          environment: ${{ inputs.environment }}
        env:
          AWS_ARN_REGION: ${{ secrets.AWS_ARN_REGION }}
          AWS_ACCOUNT_NUMBER: ${{ secrets.AWS_ACCOUNT_NUMBER }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          TASK_DEFINITION_SECRETS_JSON: ${{ secrets[format('{0}_TASK_DEFINITION_SECRETS_JSON', steps.env_case.outputs.env_upper)] }}
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
          ENV: ${{ inputs.environment }}