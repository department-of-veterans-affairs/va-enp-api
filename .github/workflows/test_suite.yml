name: Running Tests

permissions:
  contents: read

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch or Commit"
        type: string
        required: true
  workflow_call:
    inputs:
      ref:
        description: "Branch or Commit"
        type: string
        required: true

env:
  PYTHONDONTWRITEBYTECODE: 1
  PORT: 6011
  POETRY_ARGS: "--with test,static_tools"
  POETRY_HOME: "/opt/poetry"
  POETRY_VIRTUALENVS_IN_PROJECT: 1
  POETRY_NO_INTERACTION: 1
  POETRY_VERSION: 2.1.3

jobs:
  test:
    name: Lint Check and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Dependencies
        run: |
          # Prepare path to use environmental variable specified and install with poetry.lock
          export PATH="$POETRY_HOME/bin:$PATH"
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=$POETRY_VERSION python3 - && poetry install --no-root --no-ansi $POETRY_ARGS

      - name: Run Linting
        run: |
          # Set path to poetry venv
          export PATH="$PWD/.venv/bin:$PATH"
          ./scripts/run_checks.sh

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.OIDC_DEPLOY_ROLE_PREFIX }}-dev
          role-skip-session-tagging: true
          role-duration-seconds: 1800

      - name: Pull down API Schema
        run: |
          aws s3 cp s3://vanotify-environment-variables-dev/notification-api/schemas/napi-schema.sql napi-schema.sql

      - name: Start DB container
        run: |
          docker compose -f ci/docker-compose-ci.yml up -d

      - name: Run Tests
        run: |
          # Set path to poetry venv
          export PATH="$PWD/.venv/bin:$PATH"
          ./scripts/run_tests.sh

      - name: Stop DB container
        run: |
          docker compose -f ci/docker-compose-ci.yml down
